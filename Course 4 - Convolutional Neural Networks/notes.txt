--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| 0.  Introduction
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	Computer vision
	-	Example applications: Image classification, object detection, art
	- 	The size of images is a common issue for computer vision problems, ex: 1000px x 1000px x rgb = 3 million features
	
	Convolution operation
	-	Convolution is applied on a matrix by using a smaller matrix that is elementwise multiplication on while sliding
		though all the sub positions of the larger matrix
	- 	Start top left and slide to the right until the end is reached, jump down a step and repeat.
	-	The smaller matrix is called the filter or a kernel
	-	Ex: 6x6 matrix with a 3x3 filter gives a 4x4 convolution result
	-	Python: conv_forward, tf: ft.nn.conv2d, keras: Conv2D
	
	Edge detection:
	-	Vertical edge detection filter can be 	[1 0 -1] and a horizontal can be	[ 1  1  1] 
															[1 0 -1]									[ 0  0  0]
															[1 0 -1]									[-1 -1 -1]
	-	When convolution is applied with a filter then a an edge will the transfor into lines in the result
	-	A version of this the sobel filter:	[1 0 -1] or schorr filter 	[ 3 0 -3 ] that puts emphesis on the middle
														[2 0 -2]							[10 0 -10]
														[1 0 -1]							[ 3 0 -3 ]
	- This filter numbers can also be learned
	
	Dimensions and padding
	-	Take nxn matrix and a fxf filter, then the result is (n - f + 1)x(n - f + 1)
	-	Example: 6x6 and 3x3 gives (6 - 3 + 1)x(6 - 3 + 1) = 4x4
	- 	A downside of this is that images shrink
	-	Another downside is that pixels in the edge of images are less impactful
	- 	Padding can be used to remedy both these issues
	